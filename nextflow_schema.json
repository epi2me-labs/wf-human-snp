{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-human-snp",
    "description": "Small variant calling for human samples.",
    "url": "https://github.com/epi2me-labs/wf-human-snp",
    "type": "object",
    "definitions": {
        "basic_input_output_options": {
            "title": "Basic Input/Output Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "bam": {
                    "type": "string",
                    "format": "file-path",
                    "description": "BAM alignment file of reads to genomic reference"
                },
                "ref": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Reference .fasta file. A corresponding .fai file must also be present."
                },
                "bed": {
                    "type": "string",
                    "format": "file-path",
                    "description": "A BED file describing regions to process."
                },
                "model": {
                    "type": "string",
                    "description": "Clair3 Model directory. These can be obtained from http://www.bio8.cs.hku.hk/clair3/clair3_models/ and https://github.com/nanoporetech/rerio/tree/master/clair3_models."
                },
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all user-facing files."
                }
            },
            "required": [
                "bam",
                "ref",
                "model"
            ]
        },
        "advanced_output_options": {
            "title": "Advanced output options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "sample_name": {
                    "type": "string",
                    "default": "SAMPLE",
                    "description": "Sample name to be displayed in VCF outputs."
                },
                "ctg_name": {
                    "type": "string",
                    "default": "EMPTY",
                    "description": "The name of the sequence to be processed"
                },
                "include_all_ctgs": {
                    "type": "string",
                    "default": "False",
                    "description": "Call variants on all contigs, otherwise call in chr{1..22,X,Y}."
                },
                "GVCF": {
                    "type": "string",
                    "default": "False",
                    "description": "Output a GVCF file. (Experimental)."
                }
            }
        },
        "clair3_options": {
            "title": "Clair3 Options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "ref_pct_full": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Expected percentage of low quality 0/0 variants called in the pileup mode for full-alignment mode calling."
                },
                "var_pct_full": {
                    "type": "number",
                    "default": 0.7,
                    "description": "Expected percentage of low quality 0/1 and 1/1 variants called in the pileup mode for full-alignment mode calling."
                },
                "snp_min_af": {
                    "type": "number",
                    "default": 0.08,
                    "description": "Minimum SNP AF required for a candidate variant."
                },
                "indel_min_af": {
                    "type": "number",
                    "default": 0.15,
                    "description": "Minimum Indel AF required for a candidate variant."
                },
                "vcf_fn": {
                    "type": "string",
                    "default": "EMPTY",
                    "hidden": true,
                    "description": "Candidate sites VCF file input, variants will only be called at the sites in the VCF file if provided."
                },
                "phase_vcf": {
                    "type": "boolean",
                    "default": false,
                    "description": "Phase output VCF."
                },
                "use_longphase": {
                    "type": "boolean",
                    "default": true,
                    "description": "Use longphase for final phasing of output variants (experimental)."
                },
                "use_longphase_intermediate": {
                    "type": "boolean",
                    "default": true,
                    "description": "Use longphase for intermediate phasing."
                },
                "min_cov": {
                    "type": "number",
                    "default": 2.0,
                    "description": "Minimum coverage required to call a variant (experimental)."
                },
                "min_mq": {
                    "type": "number",
                    "default": 5.0,
                    "description": "Reads with mapping quality < min_mq are filtered (experimental)."
                },
                "min_contig_size": {
                    "type": "number",
                    "default": 0,
                    "description": "Contigs with contig size < min_contig_size are filtered (experimental)."
                }
            }
        },
        "benchmarking_hap_py_options": {
            "title": "Benchmarking (hap.py) Options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "truth_vcf": {
                    "type": "string",
                    "description": "VCF of truthset Variants."
                },
                "truth_bed": {
                    "type": "string",
                    "description": "BED file of confident truthset regions."
                }
            }
        },
        "meta_data": {
            "title": "Meta Data",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "report_name": {
                    "type": "string",
                    "default": "report",
                    "description": "Output report filename suffix."
                },
                "disable_ping": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable to prevent sending a workflow ping."
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "call_retries": {
                    "type": "integer",
                    "default": 5,
                    "description": "Number of times to retry variant calling tasks on failure."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/basic_input_output_options"
        },
        {
            "$ref": "#/definitions/advanced_output_options"
        },
        {
            "$ref": "#/definitions/clair3_options"
        },
        {
            "$ref": "#/definitions/benchmarking_hap_py_options"
        },
        {
            "$ref": "#/definitions/meta_data"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ],
    "properties": {
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "wfversion": {
            "type": "string",
            "default": "v0.3.2",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\nThis workflow uses [Clair3](https://www.github.com/HKU-BAL/Clair3) for calling small\nvariants from long reads. Clair3 makes the best of two methods: pileup (for fast\ncalling of variant candidates in high confidence regions), and full-alignment\n(to improve precision of calls of more complex candidates).\n\nThe workflow will output a gzipped [VCF](https://en.wikipedia.org/wiki/Variant_Call_Format)\nfile containing small variants found in the dataset.\n\n\n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [conda](https://docs.conda.io/en/latest/miniconda.html)\n"
    }
}